# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: tfsec

on:
  push:
  #   branches: [ "main" ]
  # pull_request:
  #   branches: [ "main" ]  
  # schedule:
  #   - cron: '31 7 * * 3'

jobs:
  tfsec:
    name: Run tfsec sarif report
    runs-on: ubuntu-latest
    permissions:
      actions: read
      contents: read
      security-events: write
    strategy:
      matrix:
        dir: ["src/aks", "src/core"]
        env: ["prod", "weu-beta", "weu-prod01", "weu-prod02"]

    steps:
      - name: Clone repo
        uses: actions/checkout@v3

      - name: Set selected color
        run: |
          echo "${{ matrix.dir }}/env/${{ matrix.env }}/terraform.tfvars"
          if [ -f "${{ matrix.dir }}/env/${{ matrix.env }}/terraform.tfvars" ]; then
            echo '::set-output name=ENV_EXITS::true'
          else
            echo '::set-output name=ENV_EXITS::false'
          fi
        id: check_env

      - name: Run tfsec
        if: steps.check_env.outputs.ENV_EXITS == 'true'
        uses: aquasecurity/tfsec-sarif-action@v0.1.3
        with:
          working_directory: ${{ matrix.dir }}
          sarif_file: ${{ matrix.dir }}/tfsec.sarif
          tfvars_file: ${{ matrix.dir }}/env/${{ matrix.env }}/terraform.tfvars
          # tfsec_args: --force-all-dirs

      - name: Upload SARIF file
        if: steps.check_env.outputs.ENV_EXITS == 'true'
        uses: github/codeql-action/upload-sarif@v2
        with:
          # Path to SARIF file relative to the root of the repository
          sarif_file: ${{ matrix.dir }}/tfsec.sarif

# name: Static Analysis

# on:
#   push:

# jobs:
#   static_analysis:
#     runs-on: ubuntu-latest

#     steps:
#       - uses: actions/checkout@v2

#       - name: tfsec
#         run: |
#           TAG=$(cat .terraform-version)
#           cd src
#           for folder in *; do
#             if [ -d "$folder" ]; then
#               # exclude psql folder from static analysis
#               [[ -d "$folder" && "$folder" =~ psql ]] && continue

#               echo "ðŸ”¬ folder: $folder in under terraform"
#               cd "$folder" || exit 1

#               for env in env/*; do
#                 echo "$env"
#                 if [ -d "$env" ]; then
#                   docker run -v "$(pwd):/src" aquasec/tfsec /src --format=sarif --tfvars-file=/src/"$env"/terraform.tfvars > result.sarif
#                   cat result.sarif
#                   # codeql github upload-results --sarif=result.sarif
#                   CODEQL_CLI_ARGS="github upload-results --sarif=/src/result.sarif"
#                   docker run -v "$(pwd):/src" mcr.microsoft.com/cstsectools/codeql-container /src -e CODEQL_CLI_ARGS=${CODEQL_CLI_ARGS}
#                   exit 0
#                 fi
#               done

#               cd ..
#             fi
#           done
